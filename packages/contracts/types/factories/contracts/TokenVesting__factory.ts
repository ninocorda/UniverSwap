/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenVesting,
  TokenVestingInterface,
} from "../../contracts/TokenVesting";

const _abi = [
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "releaseTime",
        type: "uint64",
      },
    ],
    name: "VestingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VestingReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "releaseTime",
            type: "uint64",
          },
        ],
        internalType: "struct TokenVesting.VestingRequest[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "createVestingBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "firstId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getVestingsByBeneficiary",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getVestingsByFunder",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
    ],
    name: "pendingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vestingId",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "vestingIds",
        type: "uint256[]",
      },
    ],
    name: "releaseMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vestings",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "released",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "releaseTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055610cfd806100256000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634836c5431161005b5780634836c5431461010257806358267e3714610123578063821bee7314610136578063887eb130146101da57600080fd5b80630557c97f1461008d5780630715139b146100ba5780630939f442146100cf57806337bdc99b146100ef575b600080fd5b6100a061009b366004610ab9565b6101e3565b604080519283526020830191909152015b60405180910390f35b6100cd6100c8366004610b3f565b610616565b005b6100e26100dd366004610bb4565b61064f565b6040516100b19190610bcf565b6100cd6100fd366004610c13565b6106bb565b610115610110366004610c13565b61084c565b6040519081526020016100b1565b6100e2610131366004610bb4565b6108fa565b610193610144366004610c13565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401546001600160a01b03938416958416949390921692909167ffffffffffffffff1686565b604080516001600160a01b039788168152958716602087015293909516928401929092526060830152608082015267ffffffffffffffff90911660a082015260c0016100b1565b61011560015481565b6000806101ee610964565b6001600160a01b0385166102365760405162461bcd60e51b815260206004820152600a602482015269544f4b454e5f5a45524f60b01b60448201526064015b60405180910390fd5b50816000816102755760405162461bcd60e51b815260206004820152600b60248201526a08a9aa0a8b2be8482a886960ab1b604482015260640161022d565b60005b828110156103a8573686868381811061029357610293610c2c565b606002919091019150600090506102ad6020830183610bb4565b6001600160a01b0316036102f65760405162461bcd60e51b815260206004820152601060248201526f42454e45464943494152595f5a45524f60801b604482015260640161022d565b60008160200135116103385760405162461bcd60e51b815260206004820152600b60248201526a414d4f554e545f5a45524f60a81b604482015260640161022d565b426103496060830160408401610c42565b67ffffffffffffffff161161038f5760405162461bcd60e51b815260206004820152600c60248201526b149153115054d157d41054d560a21b604482015260640161022d565b61039d602082013584610c82565b925050600101610278565b506103be6001600160a01b03871633308461098e565b600180546103cb91610c82565b925060005b8281101561060257368686838181106103eb576103eb610c2c565b9050606002019050600060016000815461040490610c9b565b91905081905590506040518060c001604052808a6001600160a01b03168152602001336001600160a01b031681526020018360000160208101906104489190610bb4565b6001600160a01b03168152602001836020013581526020016000815260200183604001602081019061047a9190610c42565b67ffffffffffffffff9081169091526000838152600260208181526040808420865181546001600160a01b03199081166001600160a01b03928316178355888501516001840180548316918416919091179055928801519482018054909316941693909317905560608501516003808401919091556080860151600484015560a0909501516005909201805467ffffffffffffffff191692909416919091179092559061052990850185610bb4565b6001600160a01b031681526020808201929092526040908101600090812080546001818101835591835284832001859055338252600484529181208054928301815581528290200182905561058090830183610bb4565b6001600160a01b03908116908a16827f2993a8e4fdf5875e525bdafe1e8ce99f00d29a940ae3aeb9eb32da35071450433360208701356105c66060890160408a01610c42565b604080516001600160a01b039094168452602084019290925267ffffffffffffffff169082015260600160405180910390a450506001016103d0565b505061060e6001600055565b935093915050565b60005b8181101561064a5761064283838381811061063657610636610c2c565b905060200201356106bb565b600101610619565b505050565b6001600160a01b0381166000908152600460209081526040918290208054835181840281018401909452808452606093928301828280156106af57602002820191906000526020600020905b81548152602001906001019080831161069b575b50505050509050919050565b6106c3610964565b6000818152600260208190526040909120908101546001600160a01b031661071f5760405162461bcd60e51b815260206004820152600f60248201526e554e4b4e4f574e5f56455354494e4760881b604482015260640161022d565b600581015467ffffffffffffffff1642101561076c5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d49153115054d15160a21b604482015260640161022d565b6000816004015482600301546107829190610cb4565b9050600081116107c95760405162461bcd60e51b81526020600482015260126024820152714e4f5448494e475f544f5f52454c4541534560701b604482015260640161022d565b60038201546004830155600282015482546107f1916001600160a01b039182169116836109fb565b600282015482546040518381526001600160a01b03928316929091169085907f5b659ec90a29a3254b32b5b01abbf5c000f33d6e0ac08e03e824d0c64c2a94319060200160405180910390a450506108496001600055565b50565b6000818152600260208181526040808420815160c08101835281546001600160a01b039081168252600183015481169482019490945293810154909216908301819052600382015460608401526004820154608084015260059091015467ffffffffffffffff1660a083015215806108d157508060a0015167ffffffffffffffff1642105b156108df5750600092915050565b806080015181606001516108f39190610cb4565b9392505050565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156106af576020028201919060005260206000209081548152602001906001019080831161069b5750505050509050919050565b60026000540361098757604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b0384811660248301528381166044830152606482018390526109f59186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610a2c565b50505050565b6040516001600160a01b0383811660248301526044820183905261064a91859182169063a9059cbb906064016109c3565b600080602060008451602086016000885af180610a4f576040513d6000823e3d81fd5b50506000513d91508115610a67578060011415610a74565b6001600160a01b0384163b155b156109f557604051635274afe760e01b81526001600160a01b038516600482015260240161022d565b80356001600160a01b0381168114610ab457600080fd5b919050565b600080600060408486031215610ace57600080fd5b610ad784610a9d565b9250602084013567ffffffffffffffff80821115610af457600080fd5b818601915086601f830112610b0857600080fd5b813581811115610b1757600080fd5b876020606083028501011115610b2c57600080fd5b6020830194508093505050509250925092565b60008060208385031215610b5257600080fd5b823567ffffffffffffffff80821115610b6a57600080fd5b818501915085601f830112610b7e57600080fd5b813581811115610b8d57600080fd5b8660208260051b8501011115610ba257600080fd5b60209290920196919550909350505050565b600060208284031215610bc657600080fd5b6108f382610a9d565b6020808252825182820181905260009190848201906040850190845b81811015610c0757835183529284019291840191600101610beb565b50909695505050505050565b600060208284031215610c2557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610c5457600080fd5b813567ffffffffffffffff811681146108f357600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c9557610c95610c6c565b92915050565b600060018201610cad57610cad610c6c565b5060010190565b81810381811115610c9557610c95610c6c56fea2646970667358221220b103ac59ec69b7c2532da0550f134b2f7c871d86b0051c3e3ee1a616ca69714164736f6c63430008180033";

type TokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenVesting__factory extends ContractFactory {
  constructor(...args: TokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenVesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenVesting__factory {
    return super.connect(runner) as TokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenVesting {
    return new Contract(address, _abi, runner) as unknown as TokenVesting;
  }
}
