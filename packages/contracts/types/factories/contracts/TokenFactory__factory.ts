/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenFactory,
  TokenFactoryInterface,
} from "../../contracts/TokenFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "template_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "tierId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "features",
        type: "uint256",
      },
    ],
    name: "TierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "tierId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "configHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "brandingURI",
        type: "string",
      },
    ],
    name: "TokenCreatedExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "TIER_ADVANCED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_BASIC",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_DAO",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_ELITE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_PREMIUM",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIER_PRO",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tierId",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tierId",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "templateVersion",
            type: "uint64",
          },
        ],
        internalType: "struct IERC20Template.TokenInit",
        name: "init",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "initialSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cap",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "mintable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "burnable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "pausable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "governanceEnabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoLiquidityEnabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "antiWhaleEnabled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "stakingEnabled",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "autoLiquidityBps",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "autoLiquidityRouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "autoLiquidityPairToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingManager",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "brandingURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "enum IERC20Template.FeeType",
                name: "feeType",
                type: "uint8",
              },
              {
                internalType: "uint16",
                name: "bps",
                type: "uint16",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct IERC20Template.FeeSplit[]",
            name: "fees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "vesting",
                type: "bool",
              },
              {
                internalType: "uint64",
                name: "vestingStart",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "cliff",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "duration",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
            ],
            internalType: "struct IERC20Template.InitRecipient[]",
            name: "initialDistribution",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "minters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "pausers",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "burners",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "bridgeOperators",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enabled",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "maxTxAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxWalletAmount",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cooldownBlocks",
                type: "uint8",
              },
            ],
            internalType: "struct IERC20Template.AntiWhaleConfig",
            name: "antiWhale",
            type: "tuple",
          },
        ],
        internalType: "struct IERC20Template.TokenConfig",
        name: "cfg",
        type: "tuple",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "template_",
        type: "address",
      },
    ],
    name: "setTemplateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tierId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "features",
        type: "uint256",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templateImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tierInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "features",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenRecords",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tierId",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "createdAt",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "configHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200281d3803806200281d83398101604081905262000034916200023f565b33806200005c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000678162000115565b50600180546001600160a01b03191633179055620000858162000165565b6200009b6001662386f26fc100006000620001cf565b620000b1600266354a6ba7a18000600f620001cf565b620000c860036658d15e176280006131ff620001cf565b620000df6004667c5850872380006137ff620001cf565b620000f66005668e1bc9bf040000613fff620001cf565b6200010e600667016345785d8a0000613fff620001cf565b5062000271565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116620001ad5760405162461bcd60e51b815260206004820152600d60248201526c54454d504c4154455f5a45524f60981b604482015260640162000053565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252838152602080820184815260ff8716600081815260038452859020935184559051600190930192909255825185815290810184905290917f52411122af13cde1f5bb4cd1735d2d3de551b3e1516262dfb8a18c730246b98c910160405180910390a2505050565b6000602082840312156200025257600080fd5b81516001600160a01b03811681146200026a57600080fd5b9392505050565b61259c80620002816000396000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063bfb6b73811610064578063bfb6b7381461030b578063dcc42fc2146103a1578063e74b981b146103b6578063f2fde38b146103d6578063f3fef3a3146103f657600080fd5b8063715018a6146102855780637771a9ca1461029a5780637e1c0c09146102af5780638da5cb5b146102cd578063b0d2548a146102eb57600080fd5b80633ad60316116100e75780633ad60316146101ee57806346904840146102105780634dcb91ec14610230578063634282af146102505780636c7208481461027057600080fd5b806303510c95146101245780630ec833c61461015057806318b81188146101655780632c38825f1461017a57806335766f4b146101a5575b600080fd5b34801561013057600080fd5b50610139600381565b60405160ff90911681526020015b60405180910390f35b34801561015c57600080fd5b50610139600581565b34801561017157600080fd5b50610139600281565b61018d610188366004611a5f565b610416565b6040516001600160a01b039091168152602001610147565b3480156101b157600080fd5b506101d96101c0366004611b68565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610147565b3480156101fa57600080fd5b5061020e610209366004611b8a565b610863565b005b34801561021c57600080fd5b5060015461018d906001600160a01b031681565b34801561023c57600080fd5b5061020e61024b366004611bbd565b610909565b34801561025c57600080fd5b5061018d61026b366004611bda565b61091d565b34801561027c57600080fd5b50610139600481565b34801561029157600080fd5b5061020e610947565b3480156102a657600080fd5b50610139600681565b3480156102bb57600080fd5b50600454604051908152602001610147565b3480156102d957600080fd5b506000546001600160a01b031661018d565b3480156102f757600080fd5b5060025461018d906001600160a01b031681565b34801561031757600080fd5b50610367610326366004611bbd565b600560205260009081526040902080546001909101546001600160a01b03821691600160a01b810460ff1691600160a81b9091046001600160401b03169084565b604080516001600160a01b03909516855260ff90931660208501526001600160401b03909116918301919091526060820152608001610147565b3480156103ad57600080fd5b50610139600181565b3480156103c257600080fd5b5061020e6103d1366004611bbd565b61095b565b3480156103e257600080fd5b5061020e6103f1366004611bbd565b6109f4565b34801561040257600080fd5b5061020e610411366004611bf3565b610a2f565b60ff831660009081526003602090815260408083208151808301909252805480835260019091015492820192909252906104865760405162461bcd60e51b815260206004820152600c60248201526b2a24a2a92faaa725a727aba760a11b60448201526064015b60405180910390fd5b80513410156104cc5760405162461bcd60e51b815260206004820152601260248201527114149250d157d25394d551919250d251539560721b604482015260640161047d565b336060850181905260ff86166080860152600060a086015260208201516104f4918786610b39565b60025460009061050c906001600160a01b03166116ea565b604051637f308e7b60e11b815290915081906001600160a01b0382169063fe611cf69061053f908990899060040161221a565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b5050505081935060008560405160200161058791906122b1565b6040516020818303038152906040528051906020012090506040518060800160405280336001600160a01b031681526020018960ff168152602001426001600160401b031681526020018281525060056000876001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600101559050506004859080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055508760ff16336001600160a01b0316866001600160a01b03167f4b8ed4e333adad6a2de8fb5aad8d18cb575dbc1aee9cfcc372bcb564ae9a41368a600001518b60200151868c806101a0019061072091906122c4565b8e806101c0019061073191906122c4565b604051610744979695949392919061230a565b60405180910390a46001546000906001600160a01b0316610770576000546001600160a01b031661077d565b6001546001600160a01b03165b85516040519192506000916001600160a01b03841691908381818185875af1925050503d80600081146107cc576040519150601f19603f3d011682016040523d82523d6000602084013e6107d1565b606091505b50509050806108185760405162461bcd60e51b815260206004820152601360248201527211915157d514905394d1915497d19052531151606a1b604482015260640161047d565b85513411156108565785516040513391348082146108fc0292919003906000818181858888f19350505050158015610854573d6000803e3d6000fd5b505b5050505050509392505050565b61086b6116fd565b600160ff8416108015906108835750600660ff841611155b6108bc5760405162461bcd60e51b815260206004820152600a602482015269544945525f52414e474560b01b604482015260640161047d565b600082116108f95760405162461bcd60e51b815260206004820152600a60248201526950524943455f5a45524f60b01b604482015260640161047d565b61090483838361172a565b505050565b6109116116fd565b61091a8161179a565b50565b6004818154811061092d57600080fd5b6000918252602090912001546001600160a01b0316905081565b61094f6116fd565b6109596000611802565b565b6109636116fd565b6001600160a01b0381166109aa5760405162461bcd60e51b815260206004820152600e60248201526d524543495049454e545f5a45524f60901b604482015260640161047d565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc290600090a250565b6109fc6116fd565b6001600160a01b038116610a2657604051631e4fbdf760e01b81526000600482015260240161047d565b61091a81611802565b610a376116fd565b6001600160a01b038216610a7d5760405162461bcd60e51b815260206004820152600d60248201526c57495448445241575f5a45524f60981b604482015260640161047d565b47811115610abb5760405162461bcd60e51b815260206004820152600b60248201526a42414c414e43455f4c4f5760a81b604482015260640161047d565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610af1573d6000803e3d6000fd5b50816001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482604051610b2d91815260200190565b60405180910390a25050565b6000610b4961020083018361236d565b90501180610b5657508035155b610b925760405162461bcd60e51b815260206004820152600d60248201526c111254d517d491545552549151609a1b604482015260640161047d565b6000602082013515610c1857610bd0856001856040518060400160405280600d81526020016c21a0a82fa327a92124a22222a760991b815250611852565b600117813560208301351015610c185760405162461bcd60e51b815260206004820152600d60248201526c4341505f4c545f535550504c5960981b604482015260640161047d565b6000610c286102208401846123b5565b90501180610c4557506000610c416102408401846123b5565b9050115b80610c5f57506000610c5b6102608401846123b5565b9050115b80610c7957506000610c756102808401846123b5565b9050115b15610cb657610cb2856002856040518060400160405280600f81526020016e2927a622a9afa327a92124a22222a760891b815250611852565b6002175b60008080805b610cca61020087018761236d565b9050811015610d595736610ce261020088018861236d565b83818110610cf257610cf26123fe565b905060e002019050806020013585610d0a919061242a565b9450610d1c606082016040830161243d565b15610d2657600193505b6001600160a01b038916610d3d6020830183611bbd565b6001600160a01b031614610d5057600192505b50600101610cbc565b506001610d6a61020087018761236d565b90501180610d755750805b80610d7d5750815b15610dc057600484179350610dbb886004886040518060400160405280600e81526020016d2224a9aa2fa327a92124a22222a760911b815250611852565b610e9a565b36610dcf61020087018761236d565b6000818110610de057610de06123fe565b905060e002019050806040016020810190610dfb919061243d565b15610e385760405162461bcd60e51b815260206004820152600d60248201526c56455354494e475f424153494360981b604482015260640161047d565b6001600160a01b038816610e4f6020830183611bbd565b6001600160a01b031614610e985760405162461bcd60e51b815260206004820152601060248201526f109054d250d7d3d5d3915497d11254d560821b604482015260640161047d565b505b6000610eaa6101a08701876122c4565b90501115610eeb57600884179350610eeb886008886040518060400160405280600e81526020016d26a2aa20afa327a92124a22222a760911b815250611852565b6000610efb6101c08701876122c4565b90501115610f425761080084179350610f42886108008860405180604001604052806012815260200171212920a72224a723afa327a92124a22222a760711b815250611852565b6000610f526101e0870187612458565b90501180610f6d5750610f6d6101208601610100870161243d565b15610fab57601084179350610fab886010886040518060400160405280600e81526020016d2322a2a9afa327a92124a22222a760911b815250611852565b610fbb60e0860160c0870161243d565b80610fdb57506000610fd5610140870161012088016124a0565b61ffff16115b1561107457602084179350611018886020886040518060400160405280600d81526020016c2624a8afa327a92124a22222a760991b815250611852565b600061102c61016087016101408801611bbd565b6001600160a01b03160361106f5760405162461bcd60e51b815260206004820152600a602482015269524f555445525f52455160b01b604482015260640161047d565b611176565b600061108861016087016101408801611bbd565b6001600160a01b0316146110ce5760405162461bcd60e51b815260206004820152600d60248201526c1493d555115497d5539554d151609a1b604482015260640161047d565b60006110e261018087016101608801611bbd565b6001600160a01b0316146111265760405162461bcd60e51b815260206004820152600b60248201526a1410525497d5539554d15160aa1b604482015260640161047d565b611138610140860161012087016124a0565b61ffff16156111765760405162461bcd60e51b815260206004820152600a602482015269109414d7d5539554d15160b21b604482015260640161047d565b611187610100860160e0870161243d565b8061119f575061119f6102c086016102a0870161243d565b1561122a576040841793506111db886040886040518060400160405280600c81526020016b20abafa327a92124a22222a760a11b815250611852565b6102c08501351515806111f257506102e085013515155b61122a5760405162461bcd60e51b815260206004820152600960248201526841575f504152414d5360b81b604482015260640161047d565b61123c6101208601610100870161243d565b8015611257575060006112536101e0870187612458565b9050115b156112f957608084179350611298886080886040518060400160405280601181526020017029aa20a5a4a723afa327a92124a22222a760791b815250611852565b60006112ac6101a087016101808801611bbd565b6001600160a01b0316036112f45760405162461bcd60e51b815260206004820152600f60248201526e29aa20a5a4a723afa6a0a720a3a2a960891b604482015260640161047d565b611354565b600061130d6101a087016101808801611bbd565b6001600160a01b0316146113545760405162461bcd60e51b815260206004820152600e60248201526d14d51052d25391d7d5539554d15160921b604482015260640161047d565b811561149357610100841793506113988861010088604051806040016040528060118152602001702b22a9aa24a723afa327a92124a22222a760791b815250611852565b60005b6113a961020087018761236d565b9050811015611491576113c061020087018761236d565b828181106113d0576113d06123fe565b905060e0020160400160208101906113e8919061243d565b1561148957366113fc61020088018861236d565b8381811061140c5761140c6123fe565b905060e00201905080608001602081019061142791906124bb565b6001600160401b031661144060c0830160a084016124bb565b6001600160401b031610156114875760405162461bcd60e51b815260206004820152600d60248201526c2b22a9aa2fa22aa920aa24a7a760991b604482015260640161047d565b505b60010161139b565b505b6114a360c0860160a0870161243d565b156114e257610200841793506114e288610200886040518060400160405280600d81526020016c23a7ab2fa327a92124a22222a760991b815250611852565b60006114f26102808701876123b5565b90501115611537576104008417935061153788610400886040518060400160405280601081526020016f212924a223a2afa327a92124a22222a760811b815250611852565b600061154960e0870160c0880161243d565b801561156a57506000611564610140880161012089016124a0565b61ffff16115b156115a057612710611584610140880161012089016124a0565b6115939061ffff1688356124d6565b61159d91906124ed565b90505b60006115b46101208801610100890161243d565b156116885760005b6115ca6101e0890189612458565b90508110156116865760036115e36101e08a018a612458565b838181106115f3576115f36123fe565b611609926020606090920201908101915061250f565b600381111561161a5761161a611d5d565b0361167e576127106116306101e08a018a612458565b83818110611640576116406123fe565b905060600201602001602081019061165891906124a0565b6116679061ffff168a356124d6565b61167191906124ed565b61167b908361242a565b91505b6001016115bc565b505b863581611695848861242a565b61169f919061242a565b146116de5760405162461bcd60e51b815260206004820152600f60248201526e0a6aaa0a098b2be9a92a69a82a8869608b1b604482015260640161047d565b50505050505050505050565b60006116f7826000611899565b92915050565b6000546001600160a01b031633146109595760405163118cdaa760e01b815233600482015260240161047d565b604080518082018252838152602080820184815260ff8716600081815260038452859020935184559051600190930192909255825185815290810184905290917f52411122af13cde1f5bb4cd1735d2d3de551b3e1516262dfb8a18c730246b98c910160405180910390a2505050565b6001600160a01b0381166117e05760405162461bcd60e51b815260206004820152600d60248201526c54454d504c4154455f5a45524f60981b604482015260640161047d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828416600003611893578060405160200161186d919061252a565b60408051601f198184030181529082905262461bcd60e51b825261047d91600401612553565b50505050565b6000814710156118c55760405163cf47918160e01b81524760048201526024810183905260440161047d565b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166116f75760405163b06ebf3d60e01b815260040160405180910390fd5b803560ff8116811461194057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561197d5761197d611945565b60405290565b600082601f83011261199457600080fd5b81356001600160401b03808211156119ae576119ae611945565b604051601f8301601f19908116603f011681019082821181831017156119d6576119d6611945565b816040528381528660208588010111156119ef57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811461091a57600080fd5b803561194081611a0f565b80356001600160401b038116811461194057600080fd5b60006103208284031215611a5957600080fd5b50919050565b600080600060608486031215611a7457600080fd5b611a7d8461192f565b925060208401356001600160401b0380821115611a9957600080fd5b9085019060c08288031215611aad57600080fd5b611ab561195b565b823582811115611ac457600080fd5b611ad089828601611983565b825250602083013582811115611ae557600080fd5b611af189828601611983565b602083015250611b036040840161192f565b6040820152611b1460608401611a24565b6060820152611b256080840161192f565b6080820152611b3660a08401611a2f565b60a082015293506040860135915080821115611b5157600080fd5b50611b5e86828701611a46565b9150509250925092565b600060208284031215611b7a57600080fd5b611b838261192f565b9392505050565b600080600060608486031215611b9f57600080fd5b611ba88461192f565b95602085013595506040909401359392505050565b600060208284031215611bcf57600080fd5b8135611b8381611a0f565b600060208284031215611bec57600080fd5b5035919050565b60008060408385031215611c0657600080fd5b8235611c1181611a0f565b946020939093013593505050565b60005b83811015611c3a578181015183820152602001611c22565b50506000910152565b60008151808452611c5b816020860160208601611c1f565b601f01601f19169290920160200192915050565b8035801515811461194057600080fd5b803561ffff8116811461194057600080fd5b6000808335601e19843603018112611ca857600080fd5b83016020810192503590506001600160401b03811115611cc757600080fd5b803603821315611cd657600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112611d1d57600080fd5b83016020810192503590506001600160401b03811115611d3c57600080fd5b606081023603821315611cd657600080fd5b80356004811061194057600080fd5b634e487b7160e01b600052602160045260246000fd5b818352600060208085019450826000805b86811015611df657611d9583611d4e565b6004808210611db157634e487b7160e01b845260218152602484fd5b50885261ffff611dc2848601611c7f565b1684890152604080840135611dd681611a0f565b6001600160a01b0316908901526060978801979290920191600101611d84565b50959695505050505050565b6000808335601e19843603018112611e1957600080fd5b83016020810192503590506001600160401b03811115611e3857600080fd5b60e081023603821315611cd657600080fd5b8183526000602080850194508260005b85811015611f07578135611e6d81611a0f565b6001600160a01b0316875281830135838801526040611e8d818401611c6f565b1515908801526060611ea0838201611a2f565b6001600160401b03808216838b01526080925080611ebf848701611a2f565b16838b015250505060a0611ed4818401611a2f565b6001600160401b03169088015260c0611eee838201611c6f565b15159088015260e0968701969190910190600101611e5a565b509495945050505050565b6000808335601e19843603018112611f2957600080fd5b83016020810192503590506001600160401b03811115611f4857600080fd5b8060051b3603821315611cd657600080fd5b8183526000602080850194508260005b85811015611f07578135611f7d81611a0f565b6001600160a01b031687529582019590820190600101611f6a565b611fa181611c6f565b15158252602081013560208301526040810135604083015260ff611fc76060830161192f565b1660608301525050565b60006103208235845260208301356020850152611ff060408401611c6f565b1515604085015261200360608401611c6f565b1515606085015261201660808401611c6f565b1515608085015261202960a08401611c6f565b151560a085015261203c60c08401611c6f565b151560c085015261204f60e08401611c6f565b151560e0850152610100612064848201611c6f565b151590850152610120612078848201611c7f565b61ffff169085015261014061208e848201611a24565b6001600160a01b0316908501526101606120a9848201611a24565b6001600160a01b0316908501526101806120c4848201611a24565b6001600160a01b0316908501526101a06120e084820185611c91565b83838801526120f28488018284611cdd565b93505050506101c061210681850185611c91565b86840383880152612118848284611cdd565b93505050506101e061212c81850185611d06565b8684038388015261213e848284611d73565b935050505061020061215281850185611e02565b86840383880152612164848284611e4a565b935050505061022061217881850185611f12565b8684038388015261218a848284611f5a565b935050505061024061219e81850185611f12565b868403838801526121b0848284611f5a565b93505050506102606121c481850185611f12565b868403838801526121d6848284611f5a565b93505050506102806121ea81850185611f12565b868403838801526121fc848284611f5a565b93505050506102a0612212818601828601611f98565b509392505050565b604081526000835160c06040840152612237610100840182611c43565b90506020850151603f198483030160608501526122548282611c43565b91505060ff604086015116608084015260018060a01b0360608601511660a084015260ff60808601511660c08401526001600160401b0360a08601511660e084015282810360208401526122a88185611fd1565b95945050505050565b602081526000611b836020830184611fd1565b6000808335601e198436030181126122db57600080fd5b8301803591506001600160401b038211156122f557600080fd5b602001915036819003821315611cd657600080fd5b60a08152600061231d60a083018a611c43565b828103602084015261232f818a611c43565b9050876040840152828103606084015261234a818789611cdd565b9050828103608084015261235f818587611cdd565b9a9950505050505050505050565b6000808335601e1984360301811261238457600080fd5b8301803591506001600160401b0382111561239e57600080fd5b602001915060e081023603821315611cd657600080fd5b6000808335601e198436030181126123cc57600080fd5b8301803591506001600160401b038211156123e657600080fd5b6020019150600581901b3603821315611cd657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156116f7576116f7612414565b60006020828403121561244f57600080fd5b611b8382611c6f565b6000808335601e1984360301811261246f57600080fd5b8301803591506001600160401b0382111561248957600080fd5b6020019150606081023603821315611cd657600080fd5b6000602082840312156124b257600080fd5b611b8382611c7f565b6000602082840312156124cd57600080fd5b611b8382611a2f565b80820281158282048414176116f7576116f7612414565b60008261250a57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561252157600080fd5b611b8382611d4e565b6000825161253c818460208701611c1f565b642faa24a2a960d91b920191825250600501919050565b602081526000611b836020830184611c4356fea2646970667358221220ac2148371669d111cd35df06f4d550071532dab329dbc2aa403d58df3a4ec2b764736f6c63430008180033";

type TokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFactory__factory extends ContractFactory {
  constructor(...args: TokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    template_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(template_, overrides || {});
  }
  override deploy(
    template_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(template_, overrides || {}) as Promise<
      TokenFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenFactory__factory {
    return super.connect(runner) as TokenFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFactoryInterface {
    return new Interface(_abi) as TokenFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenFactory {
    return new Contract(address, _abi, runner) as unknown as TokenFactory;
  }
}
