/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMinimalERC20,
  IMinimalERC20Interface,
} from "../../../contracts/TokenFactory.sol/IMinimalERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMinimalERC20__factory {
  static readonly abi = _abi;
  static createInterface(): IMinimalERC20Interface {
    return new Interface(_abi) as IMinimalERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMinimalERC20 {
    return new Contract(address, _abi, runner) as unknown as IMinimalERC20;
  }
}
