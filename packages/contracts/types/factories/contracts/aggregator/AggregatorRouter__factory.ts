/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AggregatorRouter,
  AggregatorRouterInterface,
} from "../../../contracts/aggregator/AggregatorRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "v3",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "v2",
        type: "address",
      },
    ],
    name: "AdaptersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "feeBps",
        type: "uint16",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "route",
        type: "string",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "feeBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "v3",
        type: "address",
      },
      {
        internalType: "address",
        name: "v2",
        type: "address",
      },
    ],
    name: "setAdapters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_feeBps",
        type: "uint16",
      },
    ],
    name: "setFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swapExactInViaV2",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "feeTier",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swapExactInViaV3",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Adapter",
    outputs: [
      {
        internalType: "contract IUniswapV2Adapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Adapter",
    outputs: [
      {
        internalType: "contract IUniswapV3Adapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805461ffff1916601417905534801561001e57600080fd5b50604051610e19380380610e1983398101604081905261003d9161015b565b816001600160a01b03811661006d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610076816100ef565b50600180556001600160a01b0381166100c15760405162461bcd60e51b815260206004820152600d60248201526c54524541535552595f5a45524f60981b6044820152606401610064565b600280546001600160a01b03909216620100000262010000600160b01b03199092169190911790555061018e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461015657600080fd5b919050565b6000806040838503121561016e57600080fd5b6101778361013f565b91506101856020840161013f565b90509250929050565b610c7c8061019d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461016c5780638da5cb5b14610174578063bd3a80cf14610185578063ec8ee10614610198578063f0f44260146101ab578063f2fde38b146101be57600080fd5b8063023b1fc9146100b957806302f05996146100ce57806303968b77146100e157806324a9d853146101075780635011616f1461012857806361d027b314610153575b600080fd5b6100cc6100c73660046109a0565b6101d1565b005b6100cc6100dc3660046109e7565b61026e565b6100f46100ef366004610a1a565b6102e4565b6040519081526020015b60405180910390f35b6002546101159061ffff1681565b60405161ffff90911681526020016100fe565b60045461013b906001600160a01b031681565b6040516001600160a01b0390911681526020016100fe565b60025461013b906201000090046001600160a01b031681565b6100cc6104e0565b6000546001600160a01b031661013b565b60035461013b906001600160a01b031681565b6100f46101a6366004610ac3565b6104f4565b6100cc6101b9366004610b27565b6106a2565b6100cc6101cc366004610b27565b610748565b6101d9610786565b6103e88161ffff1611156102235760405162461bcd60e51b815260206004820152600c60248201526b08c8a8abea89e9ebe90928e960a31b60448201526064015b60405180910390fd5b6002805461ffff191661ffff83169081179091556040519081527fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48906020015b60405180910390a150565b610276610786565b600380546001600160a01b038481166001600160a01b03199283168117909355600480549185169190921681179091556040805192835260208301919091527f4453d77d340da474af586613443e6208b3d16609ea980c8f8aa6664986fb0c99910160405180910390a15050565b60006102ee6107b3565b6004546001600160a01b03166103385760405162461bcd60e51b815260206004820152600f60248201526e56325f414441505445525f5a45524f60881b604482015260640161021a565b60008686600081811061034d5761034d610b42565b90506020020160208101906103629190610b27565b90506103796001600160a01b0382163330886107dd565b6000610385828761084a565b506004549091506103a3906001600160a01b038481169116836108a9565b600480546040516332e550d160e11b81526001600160a01b03909116916365caa1a2916103dc918d918d918d918b9189918e9101610b58565b6020604051808303816000875af11580156103fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041f9190610bc5565b9250337f1e2e5ea08c1dc99fe97e4177552b806d875adf84e8c9706c0128f4a955b2d9bb838a8a610451600182610bf4565b81811061046057610460610b42565b90506020020160208101906104759190610b27565b604080516001600160a01b03938416815292909116602083015281018990526060810186905260a060808201819052600d908201526c556e697377617056324c696b6560981b60c082015260e00160405180910390a250506104d660018055565b9695505050505050565b6104e8610786565b6104f260006108df565b565b60006104fe6107b3565b6003546001600160a01b03166105485760405162461bcd60e51b815260206004820152600f60248201526e56335f414441505445525f5a45524f60881b604482015260640161021a565b61055d6001600160a01b0388163330876107dd565b6000610569888661084a565b50600354909150610587906001600160a01b038a81169116836108a9565b60035460405163f8ba615960e01b81526001600160a01b038a81166004830152898116602483015262ffffff8916604483015285811660648301526084820184905260a482018790529091169063f8ba61599060c4016020604051808303816000875af11580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610bc5565b604080516001600160a01b038b811682528a1660208201529081018790526060810182905260a06080820181905260099082015268556e6973776170563360b81b60c082015290925033907f1e2e5ea08c1dc99fe97e4177552b806d875adf84e8c9706c0128f4a955b2d9bb9060e00160405180910390a2506104d660018055565b6106aa610786565b6001600160a01b0381166106f05760405162461bcd60e51b815260206004820152600d60248201526c54524541535552595f5a45524f60981b604482015260640161021a565b6002805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040519081527f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190602001610263565b610750610786565b6001600160a01b03811661077a57604051631e4fbdf760e01b81526000600482015260240161021a565b610783816108df565b50565b6000546001600160a01b031633146104f25760405163118cdaa760e01b815233600482015260240161021a565b6002600154036107d657604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b0384811660248301528381166044830152606482018390526108449186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061092f565b50505050565b6002546000908190612710906108649061ffff1685610c0d565b61086e9190610c24565b905061087a8184610bf4565b915080156108a2576002546108a2906001600160a01b038681169162010000900416836108a9565b9250929050565b6040516001600160a01b038381166024830152604482018390526108da91859182169063a9059cbb90606401610812565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af180610952576040513d6000823e3d81fd5b50506000513d9150811561096a578060011415610977565b6001600160a01b0384163b155b1561084457604051635274afe760e01b81526001600160a01b038516600482015260240161021a565b6000602082840312156109b257600080fd5b813561ffff811681146109c457600080fd5b9392505050565b80356001600160a01b03811681146109e257600080fd5b919050565b600080604083850312156109fa57600080fd5b610a03836109cb565b9150610a11602084016109cb565b90509250929050565b60008060008060008060a08789031215610a3357600080fd5b610a3c876109cb565b9550602087013567ffffffffffffffff80821115610a5957600080fd5b818901915089601f830112610a6d57600080fd5b813581811115610a7c57600080fd5b8a60208260051b8501011115610a9157600080fd5b6020830197508096505050506040870135925060608701359150610ab7608088016109cb565b90509295509295509295565b60008060008060008060c08789031215610adc57600080fd5b610ae5876109cb565b9550610af3602088016109cb565b9450604087013562ffffff81168114610b0b57600080fd5b93506060870135925060808701359150610ab760a088016109cb565b600060208284031215610b3957600080fd5b6109c4826109cb565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03878116825260a06020808401829052908301879052600091889160c08501845b8a811015610ba55783610b92866109cb565b1682529382019390820190600101610b80565b509190971660408501526060840195909552505060800152949350505050565b600060208284031215610bd757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c0757610c07610bde565b92915050565b8082028115828204841417610c0757610c07610bde565b600082610c4157634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220fc099ef589df8713617b496851e31e26b0a1d4b3bbd9397ad1c5a24f9e5773a364736f6c63430008180033";

type AggregatorRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregatorRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AggregatorRouter__factory extends ContractFactory {
  constructor(...args: AggregatorRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _treasury, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _treasury, overrides || {}) as Promise<
      AggregatorRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AggregatorRouter__factory {
    return super.connect(runner) as AggregatorRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregatorRouterInterface {
    return new Interface(_abi) as AggregatorRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AggregatorRouter {
    return new Contract(address, _abi, runner) as unknown as AggregatorRouter;
  }
}
